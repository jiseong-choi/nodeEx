{"openapi":"3.0.0","info":{"title":"Chris Inc.","version":"0.0.1"},"servers":[{"url":"http://localhost:8000"}],"components":{"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}},"tags":[{"name":"AUTH"},{"name":"HEALTH_CHECK"},{"name":"USER"}],"paths":{"/healthcheck":{"get":{"tags":["HEALTH_CHECK"],"summary":"서버 상태 조회 API [healthCheck]","description":"# healthCheck\n```ts\nimport axios from 'axios';\n\n\nexport interface HealthCheck {\n    \n}\n\nexport const healthCheck = async (request: HealthCheck) => {\n    let url = '/healthcheck';\n    const response = await axios.get(url, {});\n\n    return response.data;\n};\n\n```","security":[],"parameters":[],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":null}},"/user/{id}":{"get":{"tags":["USER"],"summary":"사용자 조회 API [getUser]","description":"# getUser\n```ts\nimport axios from 'axios';\n\n\nexport interface GetUser {\n    \n}\n\nexport const getUser = async (request: GetUser) => {\n    let url = '/user/:id';\n    const response = await axios.get(url, {});\n\n    return response.data;\n};\n\n```","security":[],"parameters":[],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":null}},"/users":{"get":{"tags":["USER"],"summary":"사용자 목록 조회 API [getUsers]","description":"# getUsers\n```ts\nimport axios from 'axios';\n\n\nexport interface GetUsers {\n    \n}\n\nexport const getUsers = async (request: GetUsers) => {\n    let url = '/users';\n    const response = await axios.get(url, {});\n\n    return response.data;\n};\n\n```","security":[{"bearerAuth":[]}],"parameters":[],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":null}},"/auth/signup":{"post":{"tags":["AUTH"],"summary":"사용자 생성 API [signUp]","description":"# signUp\n```ts\nimport axios from 'axios';\n\n\nexport interface SignUp {\n    body: {\n        name: string\nemail: string\npassword: string\n    }\n\n}\n\nexport const signUp = async (request: SignUp) => {\n    let url = '/auth/signup';\n    const response = await axios.post(url, request.body);\n\n    return response.data;\n};\n\n```","security":[],"parameters":[],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"name":"chris","email":"chris@chris-choi.dev","password":"테스트비밀번호"}}}}}}},"/auth/signin":{"post":{"tags":["AUTH"],"summary":"사용자 로그인 API [signIn]","description":"# signIn\n```ts\nimport axios from 'axios';\n\n\nexport interface SignIn {\n    body: {\n        email: string\npassword: string\n    }\n\n}\n\nexport const signIn = async (request: SignIn) => {\n    let url = '/auth/signin';\n    const response = await axios.post(url, request.body);\n\n    return response.data;\n};\n\n```","security":[],"parameters":[],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":{"content":{"application/json":{"schema":{"type":"object","example":{"email":"chris@chris-choi.dev","password":"테스트비밀번호"}}}}}}},"/auth/refresh":{"get":{"tags":["AUTH"],"summary":"토큰 리프레시 API [refresh]","description":"# refresh\n```ts\nimport axios from 'axios';\n\n\nexport interface Refresh {\n    \n}\n\nexport const refresh = async (request: Refresh) => {\n    let url = '/auth/refresh';\n    const response = await axios.get(url, {});\n\n    return response.data;\n};\n\n```","security":[{"bearerAuth":[]}],"parameters":[],"responses":{"200":{"description":"OK","content":{"application/json":{}}},"500":{"description":"Server Internal Error","content":{"application/json":{}}}},"requestBody":null}}}}